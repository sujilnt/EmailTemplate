{"id":"node_modules/yauzl/index.js","dependencies":[{"name":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\package.json","includedInParent":true,"mtime":1547741942855},{"name":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\package.json","includedInParent":true,"mtime":1547739754709},{"name":"fs","loc":{"line":1,"column":17},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"zlib","loc":{"line":2,"column":19},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\browserify-zlib\\lib\\index.js"},{"name":"fd-slicer","loc":{"line":3,"column":24},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\fd-slicer\\index.js"},{"name":"util","loc":{"line":4,"column":19},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\util\\util.js"},{"name":"events","loc":{"line":5,"column":27},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\events\\events.js"},{"name":"stream","loc":{"line":8,"column":23},"parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\stream-browserify\\index.js"},{"name":"buffer","parent":"C:\\Users\\Optimised\\WebstormProjects\\EnergyReportGenerator\\node_modules\\yauzl\\index.js","resolved":"C:\\Users\\Optimised\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar fs = require(\"fs\");\nvar zlib = require(\"zlib\");\nvar fd_slicer = require(\"fd-slicer\");\nvar util = require(\"util\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar Transform = require(\"stream\").Transform;\nvar PassThrough = require(\"stream\").PassThrough;\nvar Writable = require(\"stream\").Writable;\n\nexports.open = open;\nexports.fromFd = fromFd;\nexports.fromBuffer = fromBuffer;\nexports.fromRandomAccessReader = fromRandomAccessReader;\nexports.dosDateTimeToDate = dosDateTimeToDate;\nexports.ZipFile = ZipFile;\nexports.Entry = Entry;\nexports.RandomAccessReader = RandomAccessReader;\n\nfunction open(path, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.open(path, \"r\", function(err, fd) {\n    if (err) return callback(err);\n    fromFd(fd, options, function(err, zipfile) {\n      if (err) fs.close(fd, defaultCallback);\n      callback(err, zipfile);\n    });\n  });\n}\n\nfunction fromFd(fd, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.fstat(fd, function(err, stats) {\n    if (err) return callback(err);\n    var reader = fd_slicer.createFromFd(fd, {autoClose: true});\n    fromRandomAccessReader(reader, stats.size, options, callback);\n  });\n}\n\nfunction fromBuffer(buffer, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  // i got your open file right here.\n  var reader = fd_slicer.createFromBuffer(buffer);\n  fromRandomAccessReader(reader, buffer.length, options, callback);\n}\n\nfunction fromRandomAccessReader(reader, totalSize, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  if (typeof totalSize !== \"number\") throw new Error(\"expected totalSize parameter to be a number\");\n  if (totalSize > Number.MAX_SAFE_INTEGER) {\n    throw new Error(\"zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.\");\n  }\n\n  // the matching unref() call is in zipfile.close()\n  reader.ref();\n\n  // eocdr means End of Central Directory Record.\n  // search backwards for the eocdr signature.\n  // the last field of the eocdr is a variable-length comment.\n  // the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it.\n  // as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment.\n  // we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment.\n  var eocdrWithoutCommentSize = 22;\n  var maxCommentSize = 0x10000; // 2-byte size\n  var bufferSize = Math.min(eocdrWithoutCommentSize + maxCommentSize, totalSize);\n  var buffer = new Buffer(bufferSize);\n  var bufferReadStart = totalSize - buffer.length;\n  readAndAssertNoEof(reader, buffer, 0, bufferSize, bufferReadStart, function(err) {\n    if (err) return callback(err);\n    for (var i = bufferSize - eocdrWithoutCommentSize; i >= 0; i -= 1) {\n      if (buffer.readUInt32LE(i) !== 0x06054b50) continue;\n      // found eocdr\n      var eocdrBuffer = buffer.slice(i);\n\n      // 0 - End of central directory signature = 0x06054b50\n      // 4 - Number of this disk\n      var diskNumber = eocdrBuffer.readUInt16LE(4);\n      if (diskNumber !== 0) return callback(new Error(\"multi-disk zip files are not supported: found disk number: \" + diskNumber));\n      // 6 - Disk where central directory starts\n      // 8 - Number of central directory records on this disk\n      // 10 - Total number of central directory records\n      var entryCount = eocdrBuffer.readUInt16LE(10);\n      // 12 - Size of central directory (bytes)\n      // 16 - Offset of start of central directory, relative to start of archive\n      var centralDirectoryOffset = eocdrBuffer.readUInt32LE(16);\n      // 20 - Comment length\n      var commentLength = eocdrBuffer.readUInt16LE(20);\n      var expectedCommentLength = eocdrBuffer.length - eocdrWithoutCommentSize;\n      if (commentLength !== expectedCommentLength) {\n        return callback(new Error(\"invalid comment length. expected: \" + expectedCommentLength + \". found: \" + commentLength));\n      }\n      // 22 - Comment\n      // the encoding is always cp437.\n      var comment = bufferToString(eocdrBuffer, 22, eocdrBuffer.length, false);\n\n      if (!(entryCount === 0xffff || centralDirectoryOffset === 0xffffffff)) {\n        return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n      }\n\n      // ZIP64 format\n\n      // ZIP64 Zip64 end of central directory locator\n      var zip64EocdlBuffer = new Buffer(20);\n      var zip64EocdlOffset = bufferReadStart + i - zip64EocdlBuffer.length;\n      readAndAssertNoEof(reader, zip64EocdlBuffer, 0, zip64EocdlBuffer.length, zip64EocdlOffset, function(err) {\n        if (err) return callback(err);\n\n        // 0 - zip64 end of central dir locator signature = 0x07064b50\n        if (zip64EocdlBuffer.readUInt32LE(0) !== 0x07064b50) {\n          return callback(new Error(\"invalid ZIP64 End of Central Directory Locator signature\"));\n        }\n        // 4 - number of the disk with the start of the zip64 end of central directory\n        // 8 - relative offset of the zip64 end of central directory record\n        var zip64EocdrOffset = readUInt64LE(zip64EocdlBuffer, 8);\n        // 16 - total number of disks\n\n        // ZIP64 end of central directory record\n        var zip64EocdrBuffer = new Buffer(56);\n        readAndAssertNoEof(reader, zip64EocdrBuffer, 0, zip64EocdrBuffer.length, zip64EocdrOffset, function(err) {\n          if (err) return callback(err);\n\n          // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n          if (zip64EocdrBuffer.readUInt32LE(0) !== 0x06064b50) return callback(new Error(\"invalid ZIP64 end of central directory record signature\"));\n          // 4 - size of zip64 end of central directory record                8 bytes\n          // 12 - version made by                                             2 bytes\n          // 14 - version needed to extract                                   2 bytes\n          // 16 - number of this disk                                         4 bytes\n          // 20 - number of the disk with the start of the central directory  4 bytes\n          // 24 - total number of entries in the central directory on this disk         8 bytes\n          // 32 - total number of entries in the central directory            8 bytes\n          entryCount = readUInt64LE(zip64EocdrBuffer, 32);\n          // 40 - size of the central directory                               8 bytes\n          // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n          centralDirectoryOffset = readUInt64LE(zip64EocdrBuffer, 48);\n          // 56 - zip64 extensible data sector                                (variable size)\n          return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n        });\n      });\n      return;\n    }\n    callback(new Error(\"end of central directory record signature not found\"));\n  });\n}\n\nutil.inherits(ZipFile, EventEmitter);\nfunction ZipFile(reader, centralDirectoryOffset, fileSize, entryCount, comment, autoClose, lazyEntries) {\n  var self = this;\n  EventEmitter.call(self);\n  self.reader = reader;\n  // forward close events\n  self.reader.on(\"error\", function(err) {\n    // error closing the fd\n    emitError(self, err);\n  });\n  self.reader.once(\"close\", function() {\n    self.emit(\"close\");\n  });\n  self.readEntryCursor = centralDirectoryOffset;\n  self.fileSize = fileSize;\n  self.entryCount = entryCount;\n  self.comment = comment;\n  self.entriesRead = 0;\n  self.autoClose = !!autoClose;\n  self.lazyEntries = !!lazyEntries;\n  self.isOpen = true;\n  self.emittedError = false;\n\n  if (!self.lazyEntries) self.readEntry();\n}\nZipFile.prototype.close = function() {\n  if (!this.isOpen) return;\n  this.isOpen = false;\n  this.reader.unref();\n};\n\nfunction emitErrorAndAutoClose(self, err) {\n  if (self.autoClose) self.close();\n  emitError(self, err);\n}\nfunction emitError(self, err) {\n  if (self.emittedError) return;\n  self.emittedError = true;\n  self.emit(\"error\", err);\n}\n\nZipFile.prototype.readEntry = function() {\n  var self = this;\n  if (self.entryCount === self.entriesRead) {\n    // done with metadata\n    setImmediate(function() {\n      if (self.autoClose) self.close();\n      if (self.emittedError) return;\n      self.emit(\"end\");\n    });\n    return;\n  }\n  if (self.emittedError) return;\n  var buffer = new Buffer(46);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n    if (err) return emitErrorAndAutoClose(self, err);\n    if (self.emittedError) return;\n    var entry = new Entry();\n    // 0 - Central directory file header signature\n    var signature = buffer.readUInt32LE(0);\n    if (signature !== 0x02014b50) return emitErrorAndAutoClose(self, new Error(\"invalid central directory file header signature: 0x\" + signature.toString(16)));\n    // 4 - Version made by\n    entry.versionMadeBy = buffer.readUInt16LE(4);\n    // 6 - Version needed to extract (minimum)\n    entry.versionNeededToExtract = buffer.readUInt16LE(6);\n    // 8 - General purpose bit flag\n    entry.generalPurposeBitFlag = buffer.readUInt16LE(8);\n    // 10 - Compression method\n    entry.compressionMethod = buffer.readUInt16LE(10);\n    // 12 - File last modification time\n    entry.lastModFileTime = buffer.readUInt16LE(12);\n    // 14 - File last modification date\n    entry.lastModFileDate = buffer.readUInt16LE(14);\n    // 16 - CRC-32\n    entry.crc32 = buffer.readUInt32LE(16);\n    // 20 - Compressed size\n    entry.compressedSize = buffer.readUInt32LE(20);\n    // 24 - Uncompressed size\n    entry.uncompressedSize = buffer.readUInt32LE(24);\n    // 28 - File name length (n)\n    entry.fileNameLength = buffer.readUInt16LE(28);\n    // 30 - Extra field length (m)\n    entry.extraFieldLength = buffer.readUInt16LE(30);\n    // 32 - File comment length (k)\n    entry.fileCommentLength = buffer.readUInt16LE(32);\n    // 34 - Disk number where file starts\n    // 36 - Internal file attributes\n    entry.internalFileAttributes = buffer.readUInt16LE(36);\n    // 38 - External file attributes\n    entry.externalFileAttributes = buffer.readUInt32LE(38);\n    // 42 - Relative offset of local file header\n    entry.relativeOffsetOfLocalHeader = buffer.readUInt32LE(42);\n\n    self.readEntryCursor += 46;\n\n    buffer = new Buffer(entry.fileNameLength + entry.extraFieldLength + entry.fileCommentLength);\n    readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n      if (err) return emitErrorAndAutoClose(self, err);\n      if (self.emittedError) return;\n      // 46 - File name\n      var isUtf8 = entry.generalPurposeBitFlag & 0x800\n      try {\n        entry.fileName = bufferToString(buffer, 0, entry.fileNameLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      // 46+n - Extra field\n      var fileCommentStart = entry.fileNameLength + entry.extraFieldLength;\n      var extraFieldBuffer = buffer.slice(entry.fileNameLength, fileCommentStart);\n      entry.extraFields = [];\n      var i = 0;\n      while (i < extraFieldBuffer.length) {\n        var headerId = extraFieldBuffer.readUInt16LE(i + 0);\n        var dataSize = extraFieldBuffer.readUInt16LE(i + 2);\n        var dataStart = i + 4;\n        var dataEnd = dataStart + dataSize;\n        var dataBuffer = new Buffer(dataSize);\n        extraFieldBuffer.copy(dataBuffer, 0, dataStart, dataEnd);\n        entry.extraFields.push({\n          id: headerId,\n          data: dataBuffer,\n        });\n        i = dataEnd;\n      }\n\n      // 46+n+m - File comment\n      try {\n        entry.fileComment = bufferToString(buffer, fileCommentStart, fileCommentStart + entry.fileCommentLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      self.readEntryCursor += buffer.length;\n      self.entriesRead += 1;\n\n      if (entry.uncompressedSize            === 0xffffffff ||\n          entry.compressedSize              === 0xffffffff ||\n          entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        // ZIP64 format\n        // find the Zip64 Extended Information Extra Field\n        var zip64EiefBuffer = null;\n        for (var i = 0; i < entry.extraFields.length; i++) {\n          var extraField = entry.extraFields[i];\n          if (extraField.id === 0x0001) {\n            zip64EiefBuffer = extraField.data;\n            break;\n          }\n        }\n        if (zip64EiefBuffer == null) return emitErrorAndAutoClose(self, new Error(\"expected Zip64 Extended Information Extra Field\"));\n        var index = 0;\n        // 0 - Original Size          8 bytes\n        if (entry.uncompressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Original Size\"));\n          entry.uncompressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 8 - Compressed Size        8 bytes\n        if (entry.compressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Compressed Size\"));\n          entry.compressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 16 - Relative Header Offset 8 bytes\n        if (entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Relative Header Offset\"));\n          entry.relativeOffsetOfLocalHeader = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 24 - Disk Start Number      4 bytes\n      }\n\n      // validate file size\n      if (entry.compressionMethod === 0) {\n        if (entry.compressedSize !== entry.uncompressedSize) {\n          var msg = \"compressed/uncompressed size mismatch for stored file: \" + entry.compressedSize + \" != \" + entry.uncompressedSize;\n          return emitErrorAndAutoClose(self, new Error(msg));\n        }\n      }\n\n      // validate file name\n      if (entry.fileName.indexOf(\"\\\\\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid characters in fileName: \" + entry.fileName));\n      if (/^[a-zA-Z]:/.test(entry.fileName) || /^\\//.test(entry.fileName)) return emitErrorAndAutoClose(self, new Error(\"absolute path: \" + entry.fileName));\n      if (entry.fileName.split(\"/\").indexOf(\"..\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid relative path: \" + entry.fileName));\n      self.emit(\"entry\", entry);\n\n      if (!self.lazyEntries) self.readEntry();\n    });\n  });\n};\n\nZipFile.prototype.openReadStream = function(entry, callback) {\n  var self = this;\n  if (!self.isOpen) return callback(new Error(\"closed\"));\n  // make sure we don't lose the fd before we open the actual read stream\n  self.reader.ref();\n  var buffer = new Buffer(30);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, entry.relativeOffsetOfLocalHeader, function(err) {\n    try {\n      if (err) return callback(err);\n      // 0 - Local file header signature = 0x04034b50\n      var signature = buffer.readUInt32LE(0);\n      if (signature !== 0x04034b50) return callback(new Error(\"invalid local file header signature: 0x\" + signature.toString(16)));\n      // all this should be redundant\n      // 4 - Version needed to extract (minimum)\n      // 6 - General purpose bit flag\n      // 8 - Compression method\n      // 10 - File last modification time\n      // 12 - File last modification date\n      // 14 - CRC-32\n      // 18 - Compressed size\n      // 22 - Uncompressed size\n      // 26 - File name length (n)\n      var fileNameLength = buffer.readUInt16LE(26);\n      // 28 - Extra field length (m)\n      var extraFieldLength = buffer.readUInt16LE(28);\n      // 30 - File name\n      // 30+n - Extra field\n      var localFileHeaderEnd = entry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n      var compressed;\n      if (entry.compressionMethod === 0) {\n        // 0 - The file is stored (no compression)\n        compressed = false;\n      } else if (entry.compressionMethod === 8) {\n        // 8 - The file is Deflated\n        compressed = true;\n      } else {\n        return callback(new Error(\"unsupported compression method: \" + entry.compressionMethod));\n      }\n      var fileDataStart = localFileHeaderEnd;\n      var fileDataEnd = fileDataStart + entry.compressedSize;\n      if (entry.compressedSize !== 0) {\n        // bounds check now, because the read streams will probably not complain loud enough.\n        // since we're dealing with an unsigned offset plus an unsigned size,\n        // we only have 1 thing to check for.\n        if (fileDataEnd > self.fileSize) {\n          return callback(new Error(\"file data overflows file bounds: \" +\n              fileDataStart + \" + \" + entry.compressedSize + \" > \" + self.fileSize));\n        }\n      }\n      var readStream = self.reader.createReadStream({start: fileDataStart, end: fileDataEnd});\n      var endpointStream = readStream;\n      if (compressed) {\n        var destroyed = false;\n        var inflateFilter = zlib.createInflateRaw();\n        readStream.on(\"error\", function(err) {\n          // setImmediate here because errors can be emitted during the first call to pipe()\n          setImmediate(function() {\n            if (!destroyed) inflateFilter.emit(\"error\", err);\n          });\n        });\n\n        var checkerStream = new AssertByteCountStream(entry.uncompressedSize);\n        inflateFilter.on(\"error\", function(err) {\n          // forward zlib errors to the client-visible stream\n          setImmediate(function() {\n            if (!destroyed) checkerStream.emit(\"error\", err);\n          });\n        });\n        checkerStream.destroy = function() {\n          destroyed = true;\n          inflateFilter.unpipe(checkerStream);\n          readStream.unpipe(inflateFilter);\n          // TODO: the inflateFilter now causes a memory leak. see Issue #27.\n          readStream.destroy();\n        };\n        endpointStream = readStream.pipe(inflateFilter).pipe(checkerStream);\n      }\n      callback(null, endpointStream);\n    } finally {\n      self.reader.unref();\n    }\n  });\n};\n\nfunction Entry() {\n}\nEntry.prototype.getLastModDate = function() {\n  return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);\n};\n\nfunction dosDateTimeToDate(date, time) {\n  var day = date & 0x1f; // 1-31\n  var month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  var year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  var millisecond = 0;\n  var second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  var minute = time >> 5 & 0x3f; // 0-59\n  var hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nfunction readAndAssertNoEof(reader, buffer, offset, length, position, callback) {\n  if (length === 0) {\n    // fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file\n    return setImmediate(function() { callback(null, new Buffer(0)); });\n  }\n  reader.read(buffer, offset, length, position, function(err, bytesRead) {\n    if (err) return callback(err);\n    if (bytesRead < length) return callback(new Error(\"unexpected EOF\"));\n    callback();\n  });\n}\n\nutil.inherits(AssertByteCountStream, Transform);\nfunction AssertByteCountStream(byteCount) {\n  Transform.call(this);\n  this.actualByteCount = 0;\n  this.expectedByteCount = byteCount;\n}\nAssertByteCountStream.prototype._transform = function(chunk, encoding, cb) {\n  this.actualByteCount += chunk.length;\n  if (this.actualByteCount > this.expectedByteCount) {\n    var msg = \"too many bytes in the stream. expected \" + this.expectedByteCount + \". got at least \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb(null, chunk);\n};\nAssertByteCountStream.prototype._flush = function(cb) {\n  if (this.actualByteCount < this.expectedByteCount) {\n    var msg = \"not enough bytes in the stream. expected \" + this.expectedByteCount + \". got only \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb();\n};\n\nutil.inherits(RandomAccessReader, EventEmitter);\nfunction RandomAccessReader() {\n  EventEmitter.call(this);\n  this.refCount = 0;\n}\nRandomAccessReader.prototype.ref = function() {\n  this.refCount += 1;\n};\nRandomAccessReader.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  self.close(onCloseDone);\n\n  function onCloseDone(err) {\n    if (err) return self.emit('error', err);\n    self.emit('close');\n  }\n};\nRandomAccessReader.prototype.createReadStream = function(options) {\n  var start = options.start;\n  var end = options.end;\n  if (start === end) {\n    var emptyStream = new PassThrough();\n    setImmediate(function() {\n      emptyStream.end();\n    });\n    return emptyStream;\n  }\n  var stream = this._readStreamForRange(start, end);\n\n  var destroyed = false;\n  var refUnrefFilter = new RefUnrefFilter(this);\n  stream.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) refUnrefFilter.emit(\"error\", err);\n    });\n  });\n  refUnrefFilter.destroy = function() {\n    stream.unpipe(refUnrefFilter);\n    refUnrefFilter.unref();\n    stream.destroy();\n  };\n\n  var byteCounter = new AssertByteCountStream(end - start);\n  refUnrefFilter.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) byteCounter.emit(\"error\", err);\n    });\n  });\n  byteCounter.destroy = function() {\n    destroyed = true;\n    refUnrefFilter.unpipe(byteCounter);\n    refUnrefFilter.destroy();\n  };\n\n  return stream.pipe(refUnrefFilter).pipe(byteCounter);\n};\nRandomAccessReader.prototype._readStreamForRange = function(start, end) {\n  throw new Error(\"not implemented\");\n};\nRandomAccessReader.prototype.read = function(buffer, offset, length, position, callback) {\n  var readStream = this.createReadStream({start: position, end: position + length});\n  var writeStream = new Writable();\n  var written = 0;\n  writeStream._write = function(chunk, encoding, cb) {\n    chunk.copy(buffer, offset + written, 0, chunk.length);\n    written += chunk.length;\n    cb();\n  };\n  writeStream.on(\"finish\", callback);\n  readStream.on(\"error\", function(error) {\n    callback(error);\n  });\n  readStream.pipe(writeStream);\n};\nRandomAccessReader.prototype.close = function(callback) {\n  setImmediate(callback);\n};\n\nutil.inherits(RefUnrefFilter, PassThrough);\nfunction RefUnrefFilter(context) {\n  PassThrough.call(this);\n  this.context = context;\n  this.context.ref();\n  this.unreffedYet = false;\n}\nRefUnrefFilter.prototype._flush = function(cb) {\n  this.unref();\n  cb();\n};\nRefUnrefFilter.prototype.unref = function(cb) {\n  if (this.unreffedYet) return;\n  this.unreffedYet = true;\n  this.context.unref();\n};\n\nvar cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\nfunction bufferToString(buffer, start, end, isUtf8) {\n  if (isUtf8) {\n    return buffer.toString(\"utf8\", start, end);\n  } else {\n    var result = \"\";\n    for (var i = start; i < end; i++) {\n      result += cp437[buffer[i]];\n    }\n    return result;\n  }\n}\n\nfunction readUInt64LE(buffer, offset) {\n  // there is no native function for this, because we can't actually store 64-bit integers precisely.\n  // after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore.\n  // but since 53 bits is a whole lot more than 32 bits, we do our best anyway.\n  var lower32 = buffer.readUInt32LE(offset);\n  var upper32 = buffer.readUInt32LE(offset + 4);\n  // we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers.\n  return upper32 * 0x100000000 + lower32;\n  // as long as we're bounds checking the result of this function against the total file size,\n  // we'll catch any overflow errors, because we already made sure the total file size was within reason.\n}\n\nfunction defaultCallback(err) {\n  if (err) throw err;\n}\n","map":{"mappings":[{"source":"node_modules/yauzl/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/yauzl/index.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}}],"sources":{"node_modules/yauzl/index.js":"var fs = require(\"fs\");\nvar zlib = require(\"zlib\");\nvar fd_slicer = require(\"fd-slicer\");\nvar util = require(\"util\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar Transform = require(\"stream\").Transform;\nvar PassThrough = require(\"stream\").PassThrough;\nvar Writable = require(\"stream\").Writable;\n\nexports.open = open;\nexports.fromFd = fromFd;\nexports.fromBuffer = fromBuffer;\nexports.fromRandomAccessReader = fromRandomAccessReader;\nexports.dosDateTimeToDate = dosDateTimeToDate;\nexports.ZipFile = ZipFile;\nexports.Entry = Entry;\nexports.RandomAccessReader = RandomAccessReader;\n\nfunction open(path, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.open(path, \"r\", function(err, fd) {\n    if (err) return callback(err);\n    fromFd(fd, options, function(err, zipfile) {\n      if (err) fs.close(fd, defaultCallback);\n      callback(err, zipfile);\n    });\n  });\n}\n\nfunction fromFd(fd, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.fstat(fd, function(err, stats) {\n    if (err) return callback(err);\n    var reader = fd_slicer.createFromFd(fd, {autoClose: true});\n    fromRandomAccessReader(reader, stats.size, options, callback);\n  });\n}\n\nfunction fromBuffer(buffer, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  // i got your open file right here.\n  var reader = fd_slicer.createFromBuffer(buffer);\n  fromRandomAccessReader(reader, buffer.length, options, callback);\n}\n\nfunction fromRandomAccessReader(reader, totalSize, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  if (typeof totalSize !== \"number\") throw new Error(\"expected totalSize parameter to be a number\");\n  if (totalSize > Number.MAX_SAFE_INTEGER) {\n    throw new Error(\"zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.\");\n  }\n\n  // the matching unref() call is in zipfile.close()\n  reader.ref();\n\n  // eocdr means End of Central Directory Record.\n  // search backwards for the eocdr signature.\n  // the last field of the eocdr is a variable-length comment.\n  // the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it.\n  // as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment.\n  // we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment.\n  var eocdrWithoutCommentSize = 22;\n  var maxCommentSize = 0x10000; // 2-byte size\n  var bufferSize = Math.min(eocdrWithoutCommentSize + maxCommentSize, totalSize);\n  var buffer = new Buffer(bufferSize);\n  var bufferReadStart = totalSize - buffer.length;\n  readAndAssertNoEof(reader, buffer, 0, bufferSize, bufferReadStart, function(err) {\n    if (err) return callback(err);\n    for (var i = bufferSize - eocdrWithoutCommentSize; i >= 0; i -= 1) {\n      if (buffer.readUInt32LE(i) !== 0x06054b50) continue;\n      // found eocdr\n      var eocdrBuffer = buffer.slice(i);\n\n      // 0 - End of central directory signature = 0x06054b50\n      // 4 - Number of this disk\n      var diskNumber = eocdrBuffer.readUInt16LE(4);\n      if (diskNumber !== 0) return callback(new Error(\"multi-disk zip files are not supported: found disk number: \" + diskNumber));\n      // 6 - Disk where central directory starts\n      // 8 - Number of central directory records on this disk\n      // 10 - Total number of central directory records\n      var entryCount = eocdrBuffer.readUInt16LE(10);\n      // 12 - Size of central directory (bytes)\n      // 16 - Offset of start of central directory, relative to start of archive\n      var centralDirectoryOffset = eocdrBuffer.readUInt32LE(16);\n      // 20 - Comment length\n      var commentLength = eocdrBuffer.readUInt16LE(20);\n      var expectedCommentLength = eocdrBuffer.length - eocdrWithoutCommentSize;\n      if (commentLength !== expectedCommentLength) {\n        return callback(new Error(\"invalid comment length. expected: \" + expectedCommentLength + \". found: \" + commentLength));\n      }\n      // 22 - Comment\n      // the encoding is always cp437.\n      var comment = bufferToString(eocdrBuffer, 22, eocdrBuffer.length, false);\n\n      if (!(entryCount === 0xffff || centralDirectoryOffset === 0xffffffff)) {\n        return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n      }\n\n      // ZIP64 format\n\n      // ZIP64 Zip64 end of central directory locator\n      var zip64EocdlBuffer = new Buffer(20);\n      var zip64EocdlOffset = bufferReadStart + i - zip64EocdlBuffer.length;\n      readAndAssertNoEof(reader, zip64EocdlBuffer, 0, zip64EocdlBuffer.length, zip64EocdlOffset, function(err) {\n        if (err) return callback(err);\n\n        // 0 - zip64 end of central dir locator signature = 0x07064b50\n        if (zip64EocdlBuffer.readUInt32LE(0) !== 0x07064b50) {\n          return callback(new Error(\"invalid ZIP64 End of Central Directory Locator signature\"));\n        }\n        // 4 - number of the disk with the start of the zip64 end of central directory\n        // 8 - relative offset of the zip64 end of central directory record\n        var zip64EocdrOffset = readUInt64LE(zip64EocdlBuffer, 8);\n        // 16 - total number of disks\n\n        // ZIP64 end of central directory record\n        var zip64EocdrBuffer = new Buffer(56);\n        readAndAssertNoEof(reader, zip64EocdrBuffer, 0, zip64EocdrBuffer.length, zip64EocdrOffset, function(err) {\n          if (err) return callback(err);\n\n          // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n          if (zip64EocdrBuffer.readUInt32LE(0) !== 0x06064b50) return callback(new Error(\"invalid ZIP64 end of central directory record signature\"));\n          // 4 - size of zip64 end of central directory record                8 bytes\n          // 12 - version made by                                             2 bytes\n          // 14 - version needed to extract                                   2 bytes\n          // 16 - number of this disk                                         4 bytes\n          // 20 - number of the disk with the start of the central directory  4 bytes\n          // 24 - total number of entries in the central directory on this disk         8 bytes\n          // 32 - total number of entries in the central directory            8 bytes\n          entryCount = readUInt64LE(zip64EocdrBuffer, 32);\n          // 40 - size of the central directory                               8 bytes\n          // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n          centralDirectoryOffset = readUInt64LE(zip64EocdrBuffer, 48);\n          // 56 - zip64 extensible data sector                                (variable size)\n          return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n        });\n      });\n      return;\n    }\n    callback(new Error(\"end of central directory record signature not found\"));\n  });\n}\n\nutil.inherits(ZipFile, EventEmitter);\nfunction ZipFile(reader, centralDirectoryOffset, fileSize, entryCount, comment, autoClose, lazyEntries) {\n  var self = this;\n  EventEmitter.call(self);\n  self.reader = reader;\n  // forward close events\n  self.reader.on(\"error\", function(err) {\n    // error closing the fd\n    emitError(self, err);\n  });\n  self.reader.once(\"close\", function() {\n    self.emit(\"close\");\n  });\n  self.readEntryCursor = centralDirectoryOffset;\n  self.fileSize = fileSize;\n  self.entryCount = entryCount;\n  self.comment = comment;\n  self.entriesRead = 0;\n  self.autoClose = !!autoClose;\n  self.lazyEntries = !!lazyEntries;\n  self.isOpen = true;\n  self.emittedError = false;\n\n  if (!self.lazyEntries) self.readEntry();\n}\nZipFile.prototype.close = function() {\n  if (!this.isOpen) return;\n  this.isOpen = false;\n  this.reader.unref();\n};\n\nfunction emitErrorAndAutoClose(self, err) {\n  if (self.autoClose) self.close();\n  emitError(self, err);\n}\nfunction emitError(self, err) {\n  if (self.emittedError) return;\n  self.emittedError = true;\n  self.emit(\"error\", err);\n}\n\nZipFile.prototype.readEntry = function() {\n  var self = this;\n  if (self.entryCount === self.entriesRead) {\n    // done with metadata\n    setImmediate(function() {\n      if (self.autoClose) self.close();\n      if (self.emittedError) return;\n      self.emit(\"end\");\n    });\n    return;\n  }\n  if (self.emittedError) return;\n  var buffer = new Buffer(46);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n    if (err) return emitErrorAndAutoClose(self, err);\n    if (self.emittedError) return;\n    var entry = new Entry();\n    // 0 - Central directory file header signature\n    var signature = buffer.readUInt32LE(0);\n    if (signature !== 0x02014b50) return emitErrorAndAutoClose(self, new Error(\"invalid central directory file header signature: 0x\" + signature.toString(16)));\n    // 4 - Version made by\n    entry.versionMadeBy = buffer.readUInt16LE(4);\n    // 6 - Version needed to extract (minimum)\n    entry.versionNeededToExtract = buffer.readUInt16LE(6);\n    // 8 - General purpose bit flag\n    entry.generalPurposeBitFlag = buffer.readUInt16LE(8);\n    // 10 - Compression method\n    entry.compressionMethod = buffer.readUInt16LE(10);\n    // 12 - File last modification time\n    entry.lastModFileTime = buffer.readUInt16LE(12);\n    // 14 - File last modification date\n    entry.lastModFileDate = buffer.readUInt16LE(14);\n    // 16 - CRC-32\n    entry.crc32 = buffer.readUInt32LE(16);\n    // 20 - Compressed size\n    entry.compressedSize = buffer.readUInt32LE(20);\n    // 24 - Uncompressed size\n    entry.uncompressedSize = buffer.readUInt32LE(24);\n    // 28 - File name length (n)\n    entry.fileNameLength = buffer.readUInt16LE(28);\n    // 30 - Extra field length (m)\n    entry.extraFieldLength = buffer.readUInt16LE(30);\n    // 32 - File comment length (k)\n    entry.fileCommentLength = buffer.readUInt16LE(32);\n    // 34 - Disk number where file starts\n    // 36 - Internal file attributes\n    entry.internalFileAttributes = buffer.readUInt16LE(36);\n    // 38 - External file attributes\n    entry.externalFileAttributes = buffer.readUInt32LE(38);\n    // 42 - Relative offset of local file header\n    entry.relativeOffsetOfLocalHeader = buffer.readUInt32LE(42);\n\n    self.readEntryCursor += 46;\n\n    buffer = new Buffer(entry.fileNameLength + entry.extraFieldLength + entry.fileCommentLength);\n    readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n      if (err) return emitErrorAndAutoClose(self, err);\n      if (self.emittedError) return;\n      // 46 - File name\n      var isUtf8 = entry.generalPurposeBitFlag & 0x800\n      try {\n        entry.fileName = bufferToString(buffer, 0, entry.fileNameLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      // 46+n - Extra field\n      var fileCommentStart = entry.fileNameLength + entry.extraFieldLength;\n      var extraFieldBuffer = buffer.slice(entry.fileNameLength, fileCommentStart);\n      entry.extraFields = [];\n      var i = 0;\n      while (i < extraFieldBuffer.length) {\n        var headerId = extraFieldBuffer.readUInt16LE(i + 0);\n        var dataSize = extraFieldBuffer.readUInt16LE(i + 2);\n        var dataStart = i + 4;\n        var dataEnd = dataStart + dataSize;\n        var dataBuffer = new Buffer(dataSize);\n        extraFieldBuffer.copy(dataBuffer, 0, dataStart, dataEnd);\n        entry.extraFields.push({\n          id: headerId,\n          data: dataBuffer,\n        });\n        i = dataEnd;\n      }\n\n      // 46+n+m - File comment\n      try {\n        entry.fileComment = bufferToString(buffer, fileCommentStart, fileCommentStart + entry.fileCommentLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      self.readEntryCursor += buffer.length;\n      self.entriesRead += 1;\n\n      if (entry.uncompressedSize            === 0xffffffff ||\n          entry.compressedSize              === 0xffffffff ||\n          entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        // ZIP64 format\n        // find the Zip64 Extended Information Extra Field\n        var zip64EiefBuffer = null;\n        for (var i = 0; i < entry.extraFields.length; i++) {\n          var extraField = entry.extraFields[i];\n          if (extraField.id === 0x0001) {\n            zip64EiefBuffer = extraField.data;\n            break;\n          }\n        }\n        if (zip64EiefBuffer == null) return emitErrorAndAutoClose(self, new Error(\"expected Zip64 Extended Information Extra Field\"));\n        var index = 0;\n        // 0 - Original Size          8 bytes\n        if (entry.uncompressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Original Size\"));\n          entry.uncompressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 8 - Compressed Size        8 bytes\n        if (entry.compressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Compressed Size\"));\n          entry.compressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 16 - Relative Header Offset 8 bytes\n        if (entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Relative Header Offset\"));\n          entry.relativeOffsetOfLocalHeader = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 24 - Disk Start Number      4 bytes\n      }\n\n      // validate file size\n      if (entry.compressionMethod === 0) {\n        if (entry.compressedSize !== entry.uncompressedSize) {\n          var msg = \"compressed/uncompressed size mismatch for stored file: \" + entry.compressedSize + \" != \" + entry.uncompressedSize;\n          return emitErrorAndAutoClose(self, new Error(msg));\n        }\n      }\n\n      // validate file name\n      if (entry.fileName.indexOf(\"\\\\\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid characters in fileName: \" + entry.fileName));\n      if (/^[a-zA-Z]:/.test(entry.fileName) || /^\\//.test(entry.fileName)) return emitErrorAndAutoClose(self, new Error(\"absolute path: \" + entry.fileName));\n      if (entry.fileName.split(\"/\").indexOf(\"..\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid relative path: \" + entry.fileName));\n      self.emit(\"entry\", entry);\n\n      if (!self.lazyEntries) self.readEntry();\n    });\n  });\n};\n\nZipFile.prototype.openReadStream = function(entry, callback) {\n  var self = this;\n  if (!self.isOpen) return callback(new Error(\"closed\"));\n  // make sure we don't lose the fd before we open the actual read stream\n  self.reader.ref();\n  var buffer = new Buffer(30);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, entry.relativeOffsetOfLocalHeader, function(err) {\n    try {\n      if (err) return callback(err);\n      // 0 - Local file header signature = 0x04034b50\n      var signature = buffer.readUInt32LE(0);\n      if (signature !== 0x04034b50) return callback(new Error(\"invalid local file header signature: 0x\" + signature.toString(16)));\n      // all this should be redundant\n      // 4 - Version needed to extract (minimum)\n      // 6 - General purpose bit flag\n      // 8 - Compression method\n      // 10 - File last modification time\n      // 12 - File last modification date\n      // 14 - CRC-32\n      // 18 - Compressed size\n      // 22 - Uncompressed size\n      // 26 - File name length (n)\n      var fileNameLength = buffer.readUInt16LE(26);\n      // 28 - Extra field length (m)\n      var extraFieldLength = buffer.readUInt16LE(28);\n      // 30 - File name\n      // 30+n - Extra field\n      var localFileHeaderEnd = entry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n      var compressed;\n      if (entry.compressionMethod === 0) {\n        // 0 - The file is stored (no compression)\n        compressed = false;\n      } else if (entry.compressionMethod === 8) {\n        // 8 - The file is Deflated\n        compressed = true;\n      } else {\n        return callback(new Error(\"unsupported compression method: \" + entry.compressionMethod));\n      }\n      var fileDataStart = localFileHeaderEnd;\n      var fileDataEnd = fileDataStart + entry.compressedSize;\n      if (entry.compressedSize !== 0) {\n        // bounds check now, because the read streams will probably not complain loud enough.\n        // since we're dealing with an unsigned offset plus an unsigned size,\n        // we only have 1 thing to check for.\n        if (fileDataEnd > self.fileSize) {\n          return callback(new Error(\"file data overflows file bounds: \" +\n              fileDataStart + \" + \" + entry.compressedSize + \" > \" + self.fileSize));\n        }\n      }\n      var readStream = self.reader.createReadStream({start: fileDataStart, end: fileDataEnd});\n      var endpointStream = readStream;\n      if (compressed) {\n        var destroyed = false;\n        var inflateFilter = zlib.createInflateRaw();\n        readStream.on(\"error\", function(err) {\n          // setImmediate here because errors can be emitted during the first call to pipe()\n          setImmediate(function() {\n            if (!destroyed) inflateFilter.emit(\"error\", err);\n          });\n        });\n\n        var checkerStream = new AssertByteCountStream(entry.uncompressedSize);\n        inflateFilter.on(\"error\", function(err) {\n          // forward zlib errors to the client-visible stream\n          setImmediate(function() {\n            if (!destroyed) checkerStream.emit(\"error\", err);\n          });\n        });\n        checkerStream.destroy = function() {\n          destroyed = true;\n          inflateFilter.unpipe(checkerStream);\n          readStream.unpipe(inflateFilter);\n          // TODO: the inflateFilter now causes a memory leak. see Issue #27.\n          readStream.destroy();\n        };\n        endpointStream = readStream.pipe(inflateFilter).pipe(checkerStream);\n      }\n      callback(null, endpointStream);\n    } finally {\n      self.reader.unref();\n    }\n  });\n};\n\nfunction Entry() {\n}\nEntry.prototype.getLastModDate = function() {\n  return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);\n};\n\nfunction dosDateTimeToDate(date, time) {\n  var day = date & 0x1f; // 1-31\n  var month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  var year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  var millisecond = 0;\n  var second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  var minute = time >> 5 & 0x3f; // 0-59\n  var hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nfunction readAndAssertNoEof(reader, buffer, offset, length, position, callback) {\n  if (length === 0) {\n    // fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file\n    return setImmediate(function() { callback(null, new Buffer(0)); });\n  }\n  reader.read(buffer, offset, length, position, function(err, bytesRead) {\n    if (err) return callback(err);\n    if (bytesRead < length) return callback(new Error(\"unexpected EOF\"));\n    callback();\n  });\n}\n\nutil.inherits(AssertByteCountStream, Transform);\nfunction AssertByteCountStream(byteCount) {\n  Transform.call(this);\n  this.actualByteCount = 0;\n  this.expectedByteCount = byteCount;\n}\nAssertByteCountStream.prototype._transform = function(chunk, encoding, cb) {\n  this.actualByteCount += chunk.length;\n  if (this.actualByteCount > this.expectedByteCount) {\n    var msg = \"too many bytes in the stream. expected \" + this.expectedByteCount + \". got at least \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb(null, chunk);\n};\nAssertByteCountStream.prototype._flush = function(cb) {\n  if (this.actualByteCount < this.expectedByteCount) {\n    var msg = \"not enough bytes in the stream. expected \" + this.expectedByteCount + \". got only \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb();\n};\n\nutil.inherits(RandomAccessReader, EventEmitter);\nfunction RandomAccessReader() {\n  EventEmitter.call(this);\n  this.refCount = 0;\n}\nRandomAccessReader.prototype.ref = function() {\n  this.refCount += 1;\n};\nRandomAccessReader.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  self.close(onCloseDone);\n\n  function onCloseDone(err) {\n    if (err) return self.emit('error', err);\n    self.emit('close');\n  }\n};\nRandomAccessReader.prototype.createReadStream = function(options) {\n  var start = options.start;\n  var end = options.end;\n  if (start === end) {\n    var emptyStream = new PassThrough();\n    setImmediate(function() {\n      emptyStream.end();\n    });\n    return emptyStream;\n  }\n  var stream = this._readStreamForRange(start, end);\n\n  var destroyed = false;\n  var refUnrefFilter = new RefUnrefFilter(this);\n  stream.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) refUnrefFilter.emit(\"error\", err);\n    });\n  });\n  refUnrefFilter.destroy = function() {\n    stream.unpipe(refUnrefFilter);\n    refUnrefFilter.unref();\n    stream.destroy();\n  };\n\n  var byteCounter = new AssertByteCountStream(end - start);\n  refUnrefFilter.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) byteCounter.emit(\"error\", err);\n    });\n  });\n  byteCounter.destroy = function() {\n    destroyed = true;\n    refUnrefFilter.unpipe(byteCounter);\n    refUnrefFilter.destroy();\n  };\n\n  return stream.pipe(refUnrefFilter).pipe(byteCounter);\n};\nRandomAccessReader.prototype._readStreamForRange = function(start, end) {\n  throw new Error(\"not implemented\");\n};\nRandomAccessReader.prototype.read = function(buffer, offset, length, position, callback) {\n  var readStream = this.createReadStream({start: position, end: position + length});\n  var writeStream = new Writable();\n  var written = 0;\n  writeStream._write = function(chunk, encoding, cb) {\n    chunk.copy(buffer, offset + written, 0, chunk.length);\n    written += chunk.length;\n    cb();\n  };\n  writeStream.on(\"finish\", callback);\n  readStream.on(\"error\", function(error) {\n    callback(error);\n  });\n  readStream.pipe(writeStream);\n};\nRandomAccessReader.prototype.close = function(callback) {\n  setImmediate(callback);\n};\n\nutil.inherits(RefUnrefFilter, PassThrough);\nfunction RefUnrefFilter(context) {\n  PassThrough.call(this);\n  this.context = context;\n  this.context.ref();\n  this.unreffedYet = false;\n}\nRefUnrefFilter.prototype._flush = function(cb) {\n  this.unref();\n  cb();\n};\nRefUnrefFilter.prototype.unref = function(cb) {\n  if (this.unreffedYet) return;\n  this.unreffedYet = true;\n  this.context.unref();\n};\n\nvar cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\nfunction bufferToString(buffer, start, end, isUtf8) {\n  if (isUtf8) {\n    return buffer.toString(\"utf8\", start, end);\n  } else {\n    var result = \"\";\n    for (var i = start; i < end; i++) {\n      result += cp437[buffer[i]];\n    }\n    return result;\n  }\n}\n\nfunction readUInt64LE(buffer, offset) {\n  // there is no native function for this, because we can't actually store 64-bit integers precisely.\n  // after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore.\n  // but since 53 bits is a whole lot more than 32 bits, we do our best anyway.\n  var lower32 = buffer.readUInt32LE(offset);\n  var upper32 = buffer.readUInt32LE(offset + 4);\n  // we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers.\n  return upper32 * 0x100000000 + lower32;\n  // as long as we're bounds checking the result of this function against the total file size,\n  // we'll catch any overflow errors, because we already made sure the total file size was within reason.\n}\n\nfunction defaultCallback(err) {\n  if (err) throw err;\n}\n"},"lineCount":628}},"hash":"80a2e052eb268fe8995997bf701c328b","cacheData":{"env":{}}}